name: One command runner test
run-name: ${{ inputs.test_name }} on ${{ inputs.tag }} for build ${{ inputs.build_id }}

on:
  workflow_call:
    inputs:
      study_id:
        description: Lift study id
        required: true
        type: string
      objective_id:
        description: Lift objective id
        required: true
        type: string
      input_path:
        description: S3 path to synthetic data
        required: false
        default: https://fbpcs-github-e2e.s3.us-west-2.amazonaws.com/lift/inputs/partner_e2e_input.csv
        type: string
      expected_result_path:
        description: S3 path to expected results from synthetic run
        required: false
        default: https://fbpcs-github-e2e.s3.us-west-2.amazonaws.com/lift/results/partner_expected_result.json
        type: string
      tag:
        description: Version tag to use
        required: false
        default: rc
        type: string
      build_id:
        description: The build id
        required: false
        default: "test build"
        type: string
      test_name:
        description: The name of the type of tests that are being run
        default: 'PL E2E Tests'
        type: string
      tracker_hash:
        description: '[Internal usage] Used for tracking workflow job status within Meta infra'
        required: false
        type: string

  workflow_dispatch:
    inputs:
      study_id:
        description: Lift study id
        required: true
        default: '32102205110410'
      objective_id:
        description: Lift objective id
        required: true
        default: '23502204952992'
      input_path:
        description: S3 path to synthetic data
        required: true
        default: https://fbpcs-github-e2e.s3.us-west-2.amazonaws.com/lift/inputs/partner_e2e_input.csv
      expected_result_path:
        description: S3 path to expected results from synthetic run
        required: true
        default: https://fbpcs-github-e2e.s3.us-west-2.amazonaws.com/lift/results/partner_expected_result.json
      tag:
        description: Version tag to use
        required: true
        default: rc
      build_id:
        description: The build id
        required: false
        default: "test build"
      test_name:
        description: The name of the type of tests that are being run
        default: 'PL E2E Tests'
        type: 'choice'
        options:
          - PL E2E Tests
          - Multi-key PL E2E Tests
      tracker_hash:
        description: '[Internal usage] Used for tracking workflow job status within Meta infra'
        required: false
        type: string

env:
  FBPCS_CONTAINER_REPO_URL: ghcr.io/facebookresearch/fbpcs
  FBPCS_IMAGE_NAME: coordinator
  FBPCS_GRAPH_API_TOKEN: ${{ secrets.FBPCS_GRAPH_API_TOKEN }}
  CONSOLE_OUTPUT_FILE: /tmp/output.txt

jobs:
  ### Private Lift E2E tests
  pl_test:
    name: Private Lift E2E Tests
    runs-on: [self-hosted, fbpcs-e2e-test-runner]
    timeout-minutes: 90
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2
      - name: Print Tracker Hash
        run: echo ${{ inputs.tracker_hash}}

      - name: One command runner
        id: runner
        continue-on-error: true
        run: |
          ./fbpcs/scripts/run_fbpcs.sh run_study \
          ${{ inputs.study_id }} \
          --objective_ids=${{ inputs.objective_id }} \
          --input_paths=${{ inputs.input_path }} \
          --config=./fbpcs/tests/github/config_one_command_runner_test.yml \
          -- \
          --version=${{ inputs.tag }} > ${{env.CONSOLE_OUTPUT_FILE}} 2>&1

      - name: Print runner console output
        continue-on-error: true
        run: |
          cat ${{env.CONSOLE_OUTPUT_FILE}}

      - name: Abort when runner failed
        if: steps.runner.outcome != 'success'
        run: |
          echo "Please check the runner console output in the above step." ; \
          exit 1

      - name: Validate Results
        # instances are named after ent ids, so we are going to look for filenames that consist of only numbers and then run validation on them
        # the fbpcs_instances directory is where instances are written to (feature of run_fbpcs.sh)
        # the config.yml specifies that /fbpcs_instances is the instance repo, which is the source of the "/{}"
        run: |
          find fbpcs_instances -regex 'fbpcs_instances/[0-9]+' | xargs -I {} ./fbpcs/scripts/run_fbpcs.sh \
          validate \
          "/{}" \
          --config=./fbpcs/tests/github/config_one_command_runner_test.yml \
          --expected_result_path=${{ inputs.expected_result_path }} \
          -- \
          --version=${{ inputs.tag }}

      - name: Validate runner logs
        # First command extracts the pc-cli log lines starting with "... ! Command line: ..." into a file.
        run: |
          sed -n '/^.* ! Command line: .*/,$p' < ${{env.CONSOLE_OUTPUT_FILE}} > ${{env.CONSOLE_OUTPUT_FILE}}.extracted
          docker run --rm -v "${{env.CONSOLE_OUTPUT_FILE}}.extracted:${{env.CONSOLE_OUTPUT_FILE}}" ${{env.FBPCS_CONTAINER_REPO_URL}}/${{env.FBPCS_IMAGE_NAME}}:${{inputs.tag}} \
          python -m fbpcs.infra.logging_service.log_analyzer.log_analyzer ${{env.CONSOLE_OUTPUT_FILE}} --validate_one_runner_logs
